
  
    
   
   
    

    EXEC('create view "dbo"."hash__cmis_dbo_groups__dbt_tmp_temp_view" as 
-- Generated by AutomateDV (formerly known as dbtvault)

    

WITH source_data AS (

    SELECT

    ID,
    GroupName,
    GroupCode,
    Description,
    CreatedDate,
    NumberIndex,
    ParentID,
    IsActive,
    ADN,
    LastChildADN,
    GroupType,
    CreatedByName,
    CreatedByID,
    PrefixCode,
    Color,
    ExtendParentID,
    ExtendParentADN,
    ExtendPrefixCode,
    Year,
    GroupTitleID,
    Title,
    IsVirtual,
    AccountingNumber,
    FastCode,
    GroupNameEN,
    MarketOffering,
    DV_RECORD_SOURCE,
    DV_APPLIED_DATE

    FROM "DWH"."dbo"."stg__cmis_dbo_groups"
),

derived_columns AS (

    SELECT

    ID,
    GroupName,
    GroupCode,
    Description,
    CreatedDate,
    NumberIndex,
    ParentID,
    IsActive,
    ADN,
    LastChildADN,
    GroupType,
    CreatedByName,
    CreatedByID,
    PrefixCode,
    Color,
    ExtendParentID,
    ExtendParentADN,
    ExtendPrefixCode,
    Year,
    GroupTitleID,
    Title,
    IsVirtual,
    AccountingNumber,
    FastCode,
    GroupNameEN,
    MarketOffering,
    DV_RECORD_SOURCE,
    DV_APPLIED_DATE,
    DV_RECORD_SOURCE AS dv_recordsource,
    cast( DV_APPLIED_DATE as DATETIME2(6)) AS dv_load_timestamp,
    cast(ID as VARCHAR(8000)) AS department_code,
    ''default'' AS dv_tenant_id,
    ''default'' AS dv_collisioncode

    FROM source_data
),

hashed_columns AS (

    SELECT

    ID,
    GroupName,
    GroupCode,
    Description,
    CreatedDate,
    NumberIndex,
    ParentID,
    IsActive,
    ADN,
    LastChildADN,
    GroupType,
    CreatedByName,
    CreatedByID,
    PrefixCode,
    Color,
    ExtendParentID,
    ExtendParentADN,
    ExtendPrefixCode,
    Year,
    GroupTitleID,
    Title,
    IsVirtual,
    AccountingNumber,
    FastCode,
    GroupNameEN,
    MarketOffering,
    DV_RECORD_SOURCE,
    DV_APPLIED_DATE,
    dv_recordsource,
    dv_load_timestamp,
    department_code,
    dv_tenant_id,
    dv_collisioncode,

    CONVERT(CHAR(32), HASHBYTES(''MD5'', NULLIF(CONCAT(
        ISNULL(NULLIF(UPPER(TRIM(CAST(dv_tenant_id AS VARCHAR(MAX)))), ''''), ''^^''), ''||'',
        ISNULL(NULLIF(UPPER(TRIM(CAST(dv_collisioncode AS VARCHAR(MAX)))), ''''), ''^^''), ''||'',
        ISNULL(NULLIF(UPPER(TRIM(CAST(department_code AS VARCHAR(MAX)))), ''''), ''^^'')
    ), ''^^||^^||^^'')), 2) AS dv_hash_key_h_department,

    CONVERT(CHAR(32), HASHBYTES(''MD5'', CONCAT(
        ISNULL(NULLIF(UPPER(TRIM(CAST([GroupCode] AS VARCHAR(MAX)))), ''''), ''^^''), ''||'',
        ISNULL(NULLIF(UPPER(TRIM(CAST([GroupName] AS VARCHAR(MAX)))), ''''), ''^^''), ''||'',
        ISNULL(NULLIF(UPPER(TRIM(CAST([ID] AS VARCHAR(MAX)))), ''''), ''^^''), ''||'',
        ISNULL(NULLIF(UPPER(TRIM(CAST([IsActive] AS VARCHAR(MAX)))), ''''), ''^^''), ''||'',
        ISNULL(NULLIF(UPPER(TRIM(CAST([IsVirtual] AS VARCHAR(MAX)))), ''''), ''^^''), ''||'',
        ISNULL(NULLIF(UPPER(TRIM(CAST([ParentID] AS VARCHAR(MAX)))), ''''), ''^^''), ''||'',
        ISNULL(NULLIF(UPPER(TRIM(CAST([Year] AS VARCHAR(MAX)))), ''''), ''^^'')
    )), 2) AS dv_hashdiff_s_h_department

    FROM derived_columns
),

columns_to_select AS (

    SELECT

    ID,
    GroupName,
    GroupCode,
    Description,
    CreatedDate,
    NumberIndex,
    ParentID,
    IsActive,
    ADN,
    LastChildADN,
    GroupType,
    CreatedByName,
    CreatedByID,
    PrefixCode,
    Color,
    ExtendParentID,
    ExtendParentADN,
    ExtendPrefixCode,
    Year,
    GroupTitleID,
    Title,
    IsVirtual,
    AccountingNumber,
    FastCode,
    GroupNameEN,
    MarketOffering,
    DV_RECORD_SOURCE,
    DV_APPLIED_DATE,
    dv_recordsource,
    dv_load_timestamp,
    department_code,
    dv_tenant_id,
    dv_collisioncode,
    dv_hash_key_h_department,
    dv_hashdiff_s_h_department

    FROM hashed_columns
)

SELECT * FROM columns_to_select;');


   EXEC('CREATE TABLE "dbo"."hash__cmis_dbo_groups__dbt_tmp" AS (SELECT * FROM "dbo"."hash__cmis_dbo_groups__dbt_tmp_temp_view");');
   
    
    

    
    

    
    

    EXEC('DROP view IF EXISTS "dbo"."hash__cmis_dbo_groups__dbt_tmp_temp_view";');




  